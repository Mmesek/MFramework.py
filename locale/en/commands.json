{
    "help": {
        "cmd_trigger": "help",
        "command": "command",
        "category": "category",
        "categories": "categories",
        "cmd_help": "Sends list of commands",
        "cmd_extended_help": "Shows detailed help message for specified command alongside it's parameters, required permission, category and example usage.\n    Parameters: \n        :command: - Command to show detailed help info for - Example: command",
        "title": "Help details for: %{command}",
        "reqPerm": "Required Permission",
        "category_": "Category",
        "alias_": "Alias",
        "alias_message": " - Alias: `%{alias}`",
        "msg": " - %{msg}",
        "noPerm": "You do not have permission to access this command.",
        "yourPerm": "Your Permission Group: %{group}",
        "example_usage": "Example Usage",
        "parameters": "Parameters",
        "short_desc": "Command's Description",
        "available_categories": "Available Categories",
        "cmd_signature": "[command]",
        "available_triggers": "Trigger can be any of: <@%{botid}>, `%{botname}` or `%{alias}`",
        "server_trigger":"Server's Trigger Alias is set to: `%{server_alias}`",
        "example_command":"`%{alias}command argument \"second argument\" last argument with multiple words -TrueFalseFlag --value_flag=\"new value\"`"
    },
    "morse": {
        "cmd_trigger": "morse",
        "message": "message",
        "decode": "decode",
        "cmd_help": "Decodes or Encodes message in Morse",
        "cmd_signature": "[message] (-decode)"
    },
    "graph": {
        "cmd_trigger": "graph",
        "cmd_help": "Shows graph of member count change and years of account creations.",
        "cmd_extended_help": "Possible arguments: graph=all/joined/created/boosters\nresample=W-MON/M/Y/dunnowhatelse\nmonth_interval=1+ probably\n-growth",
        "joined": "Joined",
        "created": "Created",
        "boosters": "Boosters",
        "growth": "Growth",
        "infractions": "Infractions",
        "words": "Words",
        "memberCount": "Member Count",
        "infractionCount": "Infraction Count",
        "wordCount": "Word Count",
        "dates": "Dates (M/Y)",
        "stats": "Plotting: %{total}s\nGathering: %{gather}s\nSorting: %{sort}s\nConverting: %{convert}s\nImporting: %{imp}s",
        "cmd_signature": "(graph='all') (resample='Y') (locator='Month') (interval=4) (-growth)"
    },
    "rd": {
        "cmd_trigger": "rd",
        "number": "number",
        "cmd_help": "Rolls Random Number",
        "cmd_signature": "(number=20)"
    },
    "randomquote": {
        "cmd_trigger": "randomquote",
        "cmd_help": "Sends random quote"
    },
    "anagram": {
        "cmd_trigger": "anagram",
        "cmd_help": "Assembles english words from provided letters/solves anagrams"
    },
    "word": {
        "cmd_trigger": "word",
        "word": "word",
        "letter_count": "letter_count",
        "cmd_help": "Checks if provided word exists. Use * as wildcard character",
        "cmd_signature": "[word] [letter\\_count]"
    },
    "how": {
        "cmd_trigger": "how",
        "query": "query"
    },
    "today": {
        "cmd_trigger": "today",
        "cmd_help": "Summary of what is today",
        "sun": "Sun",
        "sunStates": "Rise: %{rise}\nNoon: %{noon}\nSet: %{set}",
        "moon": "Moon",
        "moonStates": "Rise: %{rise}\nIllumination: %{illumination}\nSet: %{set}",
        "lunarPhase": "Lunar Phase",
        "color": "Color",
        "quote": "Quote for today",
        "cmd_signature": "[difference]"
    },
    "refreshAppIndex": {
        "cmd_trigger": "refreshAppIndex",
        "cmd_help": "Updates Index of Steam Games"
    },
    "edit_message": {
        "cmd_trigger": "edit_message",
        "messageID": "messageID",
        "newMessage": "newMessage",
        "channel": "channel",
        "cmd_help": "Edits bot's message",
        "cmd_signature": "[messageID] [\\*newMessage] [@channel]"
    },
    "edit_emoji": {
        "cmd_trigger": "edit_emoji",
        "emojis": "emojis",
        "roles": "roles",
        "cmd_help": "Allows only specific roles access to emoji's",
        "cmd_signature": "[emojis] [roles]"
    },
    "aemoji": {
        "cmd_trigger": "aemoji",
        "emoji_name": "emoji_name",
        "cmd_help": "Sends animated emoji"
    },
    "list_emoji": {
        "cmd_trigger": "list_emoji",
        "cmd_help": "Lists all available emoji's in guild",
        "cmd_signature": "(-all) (-regular)"
    },
    "delete": {
        "cmd_trigger": "delete",
        "channel": "channel",
        "message": "message",
        "cmd_help": "Removes from db",
        "cmd_alias": "del, rm",
        "cmd_extended_help": "meme/cannedresponse/rule/snippet",
        "cmd_signature": "[name] (--typeof) (--user)"
    },
    "getmessagesfromdm": {
        "cmd_trigger": "getmessagesfromdm",
        "user": "user",
        "cmd_help": "Retrives messages from DM"
    },
    "send_dm": {
        "cmd_trigger": "send_dm",
        "user": "user",
        "message": "message",
        "alias": "dm",
        "cmd_help": "Sends user DM as a bot"
    },
    "send_message": {
        "cmd_trigger": "send_message",
        "channel": "channel",
        "message": "message",
        "cmd_help": "Sends message to a channel as a bot"
    },
    "react": {
        "cmd_trigger": "react",
        "channel": "channel",
        "messageID": "messageID",
        "reactions": "reactions",
        "cmd_help": "Reacts to a message with emoji as a bot",
        "cmd_signature": "[messageID] [\\*reactions] [@channel]"
    },
    "warn": {
        "cmd_trigger": "warn",
        "user": "user",
        "reason": "reason",
        "cmd_help": "Warns user",
        "cmd_alias": "tempmute, mute, kick, tempban, ban, unban, unmute",
        "cmd_signature": "[user] [\\*reason]"
    },
    "mute": {
        "cmd_trigger": "mute",
        "user": "user",
        "time": "time",
        "reason": "reason",
        "cmd_help": "Mutes user."
    },
    "kick": {
        "cmd_trigger": "kick",
        "user": "user",
        "reason": "reason",
        "cmd_help": "Kicks user."
    },
    "ban": {
        "cmd_trigger": "ban",
        "user": "user",
        "time": "time",
        "reason": "reason",
        "cmd_help": "Bans user."
    },
    "infractions": {
        "cmd_trigger": "infractions",
        "users": "users",
        "cmd_help": "Shows user Infractions",
        "cmd_signature": "[user] (-show\\_all)",
        "types":{
            "Warn":"Warn",
            "Mute":"Mute",
            "Ban":"Ban",
            "Unmute":"Unmute",
            "Unban": "Unban",
            "Temp_Mute":"Tempmute",
            "Temp_Ban":"Tempban",
            "Kick":"Kick"
        },
        "for_duration": "for %{duration}",
        "active": "🟢",
        "inactive": "🔴",
        "row": "%{active} %{link}`{id:%{id_width}}` [<t:%{timestamp}:d>] `[{type:%{width}}]` \"%{reason}\" by <@%{moderator_id}> %{duration}%{active}",
        "title": "%{username}'s infractions",
        "total": "Total infractions",
        "total_description": "%{active}/%{total}",
        "counter": "[%{currently_active}] | Active: %{active} | Total: %{total}",
        "no_infractions": "No Infractions"
    },
    "userInfo": {
        "cmd_trigger": "userInfo",
        "users": "users",
        "cmd_help": "Shows information about user."
    },
    "serverInfo": {
        "cmd_trigger": "serverInfo",
        "cmd_help": "Shows information about server."
    },
    "roleInfo": {
        "cmd_trigger": "roleInfo",
        "roles": "roles",
        "cmd_help": "Shows information about role."
    },
    "creationdate": {
        "cmd_trigger": "creationdate",
        "snowflake": "snowflake",
        "cmd_help": "Shows creation date based on provided snowflakes",
        "cmd_signature": "[snowflake]"
    },
    "create_rr": {
        "cmd_trigger": "create_rr",
        "channel_slash_message": "channel_slash_message",
        "role": "role",
        "reaction": "reaction",
        "": "",
        "cmd_help": "Create reaction role"
    },
    "remove_rr": {
        "cmd_trigger": "remove_rr",
        "channel": "channel",
        "message": "message",
        "reaction": "reaction",
        "cmd_help": "Remove reaction role"
    },
    "update_rr": {
        "cmd_trigger": "update_rr",
        "cmd_help": "Update reaction role"
    },
    "add_cc": {
        "cmd_trigger": "add_cc",
        "name": "name",
        "trigger": "trigger",
        "response": "response",
        "cmd_help": "Creates custom command/reaction",
        "cmd_extended_help": "$execute$command/n$$"
    },
    "remove_cc": {
        "cmd_trigger": "remove_cc",
        "name": "name",
        "trigger": "trigger",
        "cmd_help": "Removes custom command/reaction"
    },
    "customEmbed": {
        "cmd_trigger": "customEmbed",
        "embedName": "embedName",
        "cmd_help": "Creates message with custom embed"
    },
    "rtd": {
        "cmd_trigger": "rtd",
        "cmd_help": "Roll the Die"
    },
    "status": {
        "cmd_trigger": "status",
        "no_ping": "no_ping",
        "cmd_help": "Shows statistics related to bot and system",
        "cmd_signature": "(-no\\_ping)"
    },
    "version": {
        "cmd_trigger": "version",
        "cmd_help": "Shows bot information"
    },
    "remaining": {
        "cmd_trigger": "remaining",
        "cmd_help": "Short description to use with help command",
        "cmd_extended_help": "Extended description to use with detailed help command"
    },
    "shutdown": {
        "cmd_trigger": "shutdown",
        "cmd_help": "Shuts bot down."
    },
    "updateStatus": {
        "cmd_trigger": "updateStatus",
        "status": "status",
        "status_kind": "status_kind",
        "status_type": "status_type",
        "afk": "afk",
        "cmd_help": "Changes Bot's status",
        "cmd_extended_help": "Kind - Online/dnd/idle/invisible/offline/nType - 0 - Playing, 1 - Streaming, 2 - Listening, 3 - Watching"
    },
    "reloadCommands": {
        "cmd_trigger": "reloadCommands",
        "cmd_help": "Reloads commands files.",
        "cmd_extended_help": "This probably needs to be placed in another file but well, it's here currently FOR SCIENCE."
    },
    "add_rss": {
        "cmd_trigger": "add_rss",
        "name": "name",
        "url": "url",
        "language": "language",
        "color": "color",
        "avatar_url": "avatar_url",
        "cmd_help": "Add RSS to watchlist"
    },
    "sub_rss": {
        "cmd_trigger": "sub_rss",
        "name": "name",
        "webhook": "webhook",
        "content": "content",
        "regex": "regex",
        "channel": "channel",
        "cmd_help": "Sub current channel to a RSS source",
        "cmd_signature": "[name] (webhook) (content) (regex) [channel]"
    },
    "addSpotify": {
        "cmd_trigger": "addSpotify",
        "spotifyID": "spotifyID",
        "artist": "artist",
        "cmd_help": "Add Artist to tracking new releases"
    },
    "spotify": {
        "cmd_trigger": "spotify",
        "webhook": "webhook",
        "cmd_help": "Fetch new spotify releases"
    },
    "fetch_rss": {
        "cmd_trigger": "fetch_rss",
        "cmd_help": "Fetch RSS manually"
    },
    "games": {
        "cmd_trigger": "games",
        "cmd_help": "Shows users that played specified game or games played by user",
        "whoPlayed": "Users that played %{query}",
        "playedBy": "**Games played by <@%{query}>:**\n",
        "none": "Not Found",
        "cmd_signature": "[game\\_or\\_user]"
    },
    "exp": {
        "cmd_trigger": "exp",
        "cmd_help": "Shows exp of specified user",
        "chat": "\nChat: %{chat}",
        "voice": "\nVoice: %{voice}",
        "none": "User Not Found or No exp yet",
        "cmd_signature": "[user\\_id]"
    },
    "game": {
        "cmd_trigger": "game",
        "cmd_help": "Shows game details",
        "release": "Release Date: ",
        "f2p": "Free2Play",
        "price": "Price",
        "BazarPrice": "Bazar",
        "CurrentLowPrice": "Current Low",
        "HistLowPrice": "Lowest Price",
        "recommendations": "Recommendations",
        "players": "Currently players",
        "achievements": "Achievements",
        "age": "Required Age",
        "dlc": "DLC Count",
        "developers": {
            "one": "Developer",
            "many": "Developers"
        },
        "publishers": {
            "one": "Publisher",
            "many": "Publishers"
        },
        "open": "Open in Steam",
        "cmd_signature": "[game]"
    },
    "playercount": {
        "cmd_trigger": "playercount",
        "cmd_help": "Fetches playercount for specified game(s). Separate with `,`",
        "for": "Playercount for ",
        "error": "Not found: Game might be not available, released or an error occured\n",
        "cmd_signature": "[game]"
    },
    "dm": {
        "singleWordError": "Hey, it appears your message consist of mostly single word, therefore I'm not going to forward it. I'm forwarding your messages here automatically and <:%{emoji_success}> under message means it was successfully delivered to mod team. Please form a sentence and try again. Cheers mate.",
        "sameMessageError": "Please do not send same message multiple times in a row, thanks.",
        "cannedResponseSent": "Canned response `%{name}` has been sent in return.",
        "cmd_trigger": "dm",
        "cmd_help": "Sends user DM as a bot",
        "cmd_signature": "[user] [\\*message]"
    },
    "giveaway": {
        "cmd_trigger": "giveaway",
        "cmd_help": "Duration: digits followed by s, m, h, d or w",
        "endTime": "Ends at",
        "endTimeFinished": {
            "zero": "Ended at",
            "one": "Chance: %{chance} | Ended at",
            "many": "Chance: %{chance} x %{count} | Ended at"
        },
        "title": {
            "one": "%{prize}",
            "many": "%{prize} x %{count}"
        },
        "titleFinished": {
            "zero": "[NO WINNER] %{prize}",
            "one": "[ENDED] %{prize}",
            "many": "[ENDED] %{prize} x %{count}"
        },
        "description": {
            "one": "React with 🎉 to join giveaway!",
            "many": "React with 🎉 to join giveaway!\nAmount of Prizes: %{count}"
        },
        "descriptionFinished": {
            "zero": "Could not determine winner :(",
            "one": "Winner: %{winners}",
            "many": "Winners: %{winners}"
        },
        "endMessage": {
            "zero": "Could not determine winner for giveaway https://discordapp.com/channels/%{server}/%{channel}/%{message}",
            "one": "Congratulations to %{winners}!\nYou won %{prize}!\n\nTotal participants: %{participants}",
            "many": "Congratulations, %{winners}!\nYou won %{prize}!\n\nTotal participants: %{participants}"
        },
        "rerollMessage": {
            "zero": "Could not reroll winner for giveaway https://discordapp.com/channels/%{server}/%{channel}/%{message}",
            "one": "Congratulations to %{winners}!\nYou won %{prize} after reroll!\n\nTotal participants: %{participants}",
            "many": "Congratulations, %{winners}!\nYou won %{prize} after reroll!\n\nTotal participants: %{participants}"
        },
        "cmd_signature": "[duration] [winner\\_count] [\\*prize] [@channel]"
    },
    "currency_exchange": {
        "cmd_trigger": "currency_exchange",
        "cmd_help": "Converts currency",
        "result": "%{result} %{to_currency} from %{amount} %{currency}",
        "cmd_alias": "cc, currency",
        "cmd_signature": "(amount='1') (currency='EUR') (to\\_currency='USD') (-fresh)"
    },
    "steamcalc": {
        "cmd_trigger": "steamcalc",
        "cmd_help": "Steam Calculator. Similiar to Steamdb one (With few differences). Provide Country Code for currency",
        "notFound": "Not Found",
        "vanityURL": "Couldn't find specifed User. Please provide either your Vanity URL name or SteamID",
        "privateProfile": "Couldn't find any games on specified account. Perhaps profile is set to private?",
        "playtime": "Playtime: %{hours}h",
        "prices": "\nPrices: %{prices}",
        "pricetaged": "\nPricetaged: %{price_taged}",
        "notAvailable": "\nNot Available: %{unavailable}",
        "total": "Total",
        "hoursPerGame": "Hours per game: %{avg}",
        "pricePerGame": "\nPrice per game: %{price}",
        "pricePerHour": "\nPrice per hour: %{price}",
        "avg": "Average",
        "games": "Games",
        "games_desc": "Total: %{game_count}\nPlayed: %{total_played}",
        "cmd_signature": "[user] (--currency)"
    },
    "timezone": {
        "cmd_trigger": "timezone",
        "cmd_help": "Shows current time in specified timezone(s)",
        "timezoneNotFound": "Couldn't find timezone %{from_timezone}",
        "notFound": "Not Found",
        "cmd_signature": "(yymmdd='YYYY-MM-DD') (hhmm='HH:MM') [\\*timezones]"
    },
    "profile": {
        "cmd_trigger": "profile",
        "cmd_help": "Sets profile",
        "language": "Language",
        "birthday": "Birthday",
        "timezone": "Timezone: %{timezone}",
        "region": "Region: %{region}",
        "currency": "Currency: %{currency}",
        "regional": "Regional",
        "totalEXP": "Total EXP",
        "totalVoiceEXP": "Total Voice EXP",
        "datesDiscord": "Discord: %{discord}",
        "datesServer": "Server: %{server}",
        "datesBoostStart": "Booster: %{boost}",
        "datesJoined": "Joined",
        "notFoundRegion": "Couldn't find region %{region}",
        "notFoundCurrency": "Couldn't find currency %{currency}",
        "notFoundTimezone": "Couldn't find timezone %{timezone}",
        "notFoundLanguage": "Couldn't find language %{language}",
        "cmd_signature": "(command)"
    },
    "hsummary": {
        "cmd_trigger": "hsummary",
        "cmd_help": "Shows Halloween 2020 statistics graph",
        "cmd_signature": "(--resample) (--locator) (--interval) (-growth)"
    },
    "top": {
        "cmd_trigger": "top",
        "cmd_help": "Shows leaderboard",
        "cmd_signature": "(limit=10) (-games) (-voice) (-chat) (-count)"
    },
    "get_ban": {
        "cmd_trigger": "get_ban",
        "cmd_signature": "[userid]"
    },
    "api": {
        "cmd_trigger": "api",
        "cmd_help": "Search for API",
        "cmd_signature": "[category] (-random) (--desc) (--title) (--cors) (--https) (--auth)"
    },
    "roman": {
        "cmd_trigger": "roman",
        "cmd_help": "Converts Roman to Int, or vice versa",
        "cmd_extended_help": "Very simple and does not really work (Well, it works but if you mess up digit it does not really check that)",
        "cmd_signature": "[value]"
    },
    "timeunits": {
        "cmd_trigger": "timeunits",
        "cmd_help": "Converts for example 3600s into 1h. Works with `s`, `m`, `h`, `d` and `w`",
        "cmd_signature": "[duration]"
    },
    "upsidedown": {
        "cmd_trigger": "upsidedown",
        "cmd_help": "Makes text uʍop ǝpᴉsdn!",
        "cmd_signature": "[text]"
    },
    "rot": {
        "cmd_trigger": "rot",
        "cmd_signature": "[key] (--shift) (--alphabet)"
    },
    "reverse": {
        "cmd_trigger": "reverse",
        "cmd_help": "Reverses letters",
        "cmd_signature": "[message] (-inplace)"
    },
    "loadrules": {
        "cmd_trigger": "loadrules",
        "cmd_help": "Loads rules based on message. Default detects \"🔸 **1.** Rule\" as separate rule",
        "cmd_signature": "[messagelink] (separate\\_rules='🔸') (rule\\_nr\\_ends\\_with='.\\*\\*')"
    },
    "add": {
        "cmd_trigger": "add",
        "cmd_alias": "sm",
        "cmd_help": "Adds to db",
        "cmd_extended_help": "meme/cannedresponse/rule/snippet/spotify/rss/regex\n    if rss: response = [uri color lang avatar_url]\n    if regex: response = [trigger required_role response]",
        "cmd_signature": "[name] [\\*response] (--trigger) (--type)"
    },
    "ls": {
        "cmd_trigger": "ls",
        "cmd_alias": "meme, m, r, rule, s, snippet",
        "cmd_help": "Lists currently stored snippets",
        "cmd_extended_help": "meme/cannedresponse/rule/snippet",
        "cmd_signature": "(type='meme') [\\*names] (--has)"
    },
    "edit": {
        "cmd_trigger": "edit",
        "cmd_alias": "em",
        "cmd_help": "Edits entry",
        "cmd_signature": "[name] [\\*new\\_response] (--trigger) (--type)"
    },
    "role": {
        "cmd_trigger": "role",
        "cmd_help": "Create self role. Only one per booster",
        "cmd_signature": "[hex\\_color] [\\*name]"
    },
    "giveaway_delete": {
        "cmd_trigger": "giveaway_delete",
        "cmd_help": "Deletes Giveaway",
        "cmd_signature": "[message\\_id]"
    },
    "giveaway_end": {
        "cmd_trigger": "giveaway_end",
        "cmd_help": "Ends Giveaway",
        "cmd_signature": "[message\\_id]"
    },
    "reroll": {
        "cmd_trigger": "reroll",
        "cmd_help": "Rerolls giveaway",
        "cmd_signature": "[message\\_id] [\\*amount]"
    },
    "graph_infractions": {
        "cmd_trigger": "graph_infractions",
        "cmd_help": "Plot infractions over days",
        "cmd_signature": "(infraction\\_type='all') (resample='D') (locator='Week') (interval=1) (--moderator) (--user) (-growth)"
    },
    "graph_words": {
        "cmd_trigger": "graph_words",
        "cmd_help": "Plots word usage over days",
        "cmd_signature": "[channel\\_id] [\\*word\\_or\\_phrase] (--limit\\_messages) (--resample) (--locator) (--interval) (-growth)"
    },
    "lyrics": {
        "cmd_trigger": "lyrics",
        "cmd_help": "Sends Lyrics for provided song",
        "cmd_signature": "[artist] [song]"
    },
    "xkcdpassword": {
        "cmd_trigger": "xkcdpassword",
        "cmd_help": "Generates random xkcd 936 styled password"
    },
    "fileext": {
        "cmd_trigger": "fileext",
        "cmd_help": "Shows file extension details",
        "cmd_signature": "[ext]"
    },
    "chord": {
        "cmd_trigger": "chord",
        "cmd_help": "Shows guitar chord(s) diagram(s)",
        "cmd_signature": "[chords] (-all)"
    },
    "add_chord": {
        "cmd_trigger": "add_chord",
        "cmd_help": "Adds new chord",
        "cmd_signature": "[chord] [\\*frets]"
    },
    "tuning": {
        "cmd_trigger": "tuning",
        "cmd_help": "Shows chords on frets for specified tuning",
        "cmd_signature": "[tuning]"
    },
    "hltb": {
        "cmd_trigger": "hltb",
        "cmd_help": "Shows How Long to Beat",
        "cmd_signature": "[game]"
    },
    "roll": {
        "cmd_trigger": "roll",
        "cmd_help": "Rolls a percentage chance",
        "cmd_signature": "[argument]"
    },
    "ssearch": {
        "cmd_trigger": "ssearch",
        "cmd_help": "search spotify",
        "cmd_signature": "[query]"
    },
    "stack_search": {
        "cmd_trigger": "stack_search",
        "cmd_help": "Search Stack Overflow",
        "cmd_signature": "[search]"
    },
    "refreshappindex": {
        "cmd_trigger": "refreshappindex",
        "cmd_help": "Updates Index of Steam Games"
    },
    "steamlist": {
        "cmd_trigger": "steamlist",
        "cmd_help": "Lists closest matches in Steam Index",
        "cmd_signature": "[game]"
    },
    "getmessages": {
        "cmd_trigger": "getmessages",
        "cmd_help": "Retrives messages from DM",
        "cmd_signature": "[user]"
    },
    "say": {
        "cmd_trigger": "say",
        "cmd_help": "Sends message to a channel as a bot. DOES NOT SEND CHANNEL MENTIONS",
        "cmd_signature": "[message] [@channel]"
    },
    "listmembers": {
        "cmd_trigger": "listmembers",
        "cmd_help": "Lists members with specified role",
        "cmd_signature": "[role]"
    },
    "set_role": {
        "cmd_trigger": "set_role",
        "cmd_help": "Role settings",
        "cmd_signature": "[role\\_id] (command) [@role\\_mentions]"
    },
    "settings": {
        "cmd_trigger": "settings",
        "cmd_help": "Server settings",
        "cmd_signature": "(command)"
    },
    "dplay": {
        "cmd_trigger": "dplay"
    },
    "dpause": {
        "cmd_trigger": "dpause"
    },
    "dnext": {
        "cmd_trigger": "dnext"
    },
    "dprevious": {
        "cmd_trigger": "dprevious"
    },
    "dvolume": {
        "cmd_trigger": "dvolume",
        "cmd_signature": "[new\\_volume]"
    },
    "dplaying": {
        "cmd_trigger": "dplaying"
    },
    "dhistory": {
        "cmd_trigger": "dhistory"
    },
    "dlyrics": {
        "cmd_trigger": "dlyrics"
    },
    "dstart": {
        "cmd_trigger": "dstart"
    },
    "ping": {
        "cmd_trigger": "ping",
        "cmd_help": "Shows ping & Heartbeat latency",
        "cmd_signature": "(-detailed)"
    },
    "stats": {
        "cmd_trigger": "stats"
    },
    "updatestatus": {
        "cmd_trigger": "updatestatus",
        "cmd_help": "Changes Bot's status",
        "cmd_extended_help": "Kind - Online/dnd/idle/invisible/offline\nType - 0 - Playing, 1 - Streaming, 2 - Listening, 3 - Watching",
        "cmd_signature": "(status='How the World Burns') (status\\_kind='Online') (status\\_type=3) (afk)"
    },
    "update": {
        "cmd_trigger": "update",
        "cmd_help": "Pulls new commits"
    },
    "join": {
        "cmd_trigger": "join"
    }
}