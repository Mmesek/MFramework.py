version: '3.7'
services:
  bot:
    build:
      context: ..
      dockerfile: .docker/Dockerfile
      target: base
    image: mframework
    container_name: Bot
    hostname: bot
    command: ["python", "-m", "MFramework", "bot", "--cfg=data/secrets.ini", "--log=INFO"]
    environment:
      - TZ=utc
    restart: unless-stopped
    volumes:
      - ../../bot/data:/app/data:rw
      - ../../bot/code:/app/bot:ro
      - ../../bot/locale:/app/locale:ro
      - ../../bot/extensions:/app/extensions:ro
    depends_on:
      - db
      - cache
    networks:
      internal:
        ipv4_address: 172.20.0.4

  panel:
    image: adminer
    container_name: Adminer
    hostname: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      - ADMINER_DESIGN=dracula
    depends_on:
      - db
    networks:
      internal:
        ipv4_address: 172.20.0.5

  db:
    image: postgres:alpine
    container_name: Postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data:rw
    expose:
      - 5432
    networks:
      internal:
        ipv4_address: 172.20.0.2

  cache:
    image: redis
    container_name: Redis
    hostname: redis
    restart: unless-stopped
    expose:
      - 6379
    networks:
      internal:
        ipv4_address: 172.20.0.3

volumes:
  data:
  code:
  locale:
  extensions:
  pgdata:

networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
